{"version":3,"file":"background-ui.js","mappings":";;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K","sources":["webpack://@tallyho/tally-extension/./src/background-ui.ts"],"sourcesContent":["// TODO This is meant to do UI notifications, but is incomplete.\n/* import { browser, newProxyStore } from \"@tallyho/tally-background\"\n\nnewProxyStore().then((backgroundStore) => {\n  // undefined if no account has been resolved, string array with the latest\n  // activity hashes if it has.\n  let latestActivityHashes: Set<string> | undefined\n\n  backgroundStore.subscribe(() => {\n    const state = backgroundStore.getState()\n    const {\n      combinedData: { totalMainCurrencyValue, activity: updatedActivity },\n    } = state.account\n\n    if (updatedActivity) {\n      // Undefined activity hashes means we're initializing. Otherwise, notify\n      // for any new activity.\n      if (typeof latestActivityHashes === \"undefined\") {\n        latestActivityHashes = new Set()\n      } else {\n        const newActivity = updatedActivity.filter(\n          ({ hash }) => latestActivityHashes?.has(hash) || false\n        )\n\n        browser.notifications.create(\"balance-update\", {\n          type: \"basic\",\n          title: \"Balance Update\",\n          message: `<address> has balance ${totalMainCurrencyValue}`,\n          contextMessage: `${newActivity.length} transactions have updated the balance for <address> to ${totalMainCurrencyValue}`,\n        })\n      }\n\n      latestActivityHashes = updatedActivity.reduce(\n        (acc, { hash }) => acc.add(hash),\n        latestActivityHashes\n      )\n    } else {\n      // Account has been cleared, reset activity hashes so they can be\n      // reinitialized next time the account is set.\n      latestActivityHashes = undefined\n    }\n  })\n}) */\n"],"names":[],"sourceRoot":""}